services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/dist:/app/dist  # Valid volume mapping
    command: ["npm", "run", "build"]
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASS=root
      - DB_NAME=test
    depends_on:
      - db

  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
    ports:
      - "3307:3307"
    volumes:
      - db-data:/var/lib/mysql  # Persist the data
      - ./database/init:/docker-entrypoint-initdb.d

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Mount Nginx config file
      - ./frontend/dist:/usr/share/nginx/html  # Serve frontend files (Ensure frontendPath is correct)
    ports:
      - "8080:80"  # Expose Nginx on port 8080
    depends_on:
      - backend
      - frontend # Add frontend only if it exists
      - db

networks:
  app-network:
    driver: bridge

volumes:
  db-data: